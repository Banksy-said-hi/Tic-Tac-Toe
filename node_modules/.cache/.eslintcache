[{"/Users/sinarahimi/Desktop/my-app/src/index.js":"1","/Users/sinarahimi/Desktop/my-app/src/reportWebVitals.js":"2","/Users/sinarahimi/Desktop/my-app/src/App.js":"3"},{"size":535,"mtime":1653508261529,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1653508261529,"results":"6","hashOfConfig":"5"},{"size":4409,"mtime":1653846543603,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lrws58",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"/Users/sinarahimi/Desktop/my-app/src/index.js",[],[],"/Users/sinarahimi/Desktop/my-app/src/reportWebVitals.js",[],[],"/Users/sinarahimi/Desktop/my-app/src/App.js",["18","19","20","21","22","23","24","25"],[],"import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [cell1, setCell1] = useState(null);\n  const [cell2, setCell2] = useState(null);\n  const [cell3, setCell3] = useState(null);\n  const [cell4, setCell4] = useState(null);\n  const [cell5, setCell5] = useState(null);\n  const [cell6, setCell6] = useState(null);\n  const [cell7, setCell7] = useState(null);\n  const [cell8, setCell8] = useState(null);\n  const [cell9, setCell9] = useState(null);\n\n  const [bias, setBias] = useState(\"no side!\");\n\n  const [X_Moves, setX_Moves] = useState([]);\n  const [O_Moves, setO_Moves] = useState([]);\n\n  const [programID, setProgramID] = useState(null);\n  const [solAmount, setSolAmount] = useState(null);\n  const [winner, setWinner] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(null);\n  const [publicKey, yourPublicKey] = useState(null)\n\n\n\n\n  const handleCell = (cell, setCell, index) => {\n    if (bias == \"X\") {\n      if (cell == null) {\n        setCell(\"X\");\n        setX_Moves(list => [...list, index])\n        console.log(`Cell ${index} is now occupied by player X`);\n      } else {\n        alert(\"This cell has already been occupied!\");\n      }\n    } else if (bias == \"O\") {\n      if (cell == null) {\n        setCell(\"O\");\n        setO_Moves(list => [...list, index]);\n        console.log(`Cell ${index} is now occupied by player O`);\n      } else {\n        alert(\"This cell has already been occupied!\");\n      }\n    } else {\n      alert(\"Please pick up a side first!\");\n    }\n  }\n\n  const handleClaim = () => {\n    console.log(\"Your gains will be send to you!\")\n  }\n\n  const handleWallet = () => {\n    // window.solana.connect();\n    window.solana.request({method:\"connect\"});\n    console.log(\"The wallet is connected!\");\n  }\n\n\n  return (\n    <div className='App'>\n\n      <header className=\"App-header\">\n        <h1>Tic-Tac-Toe Game</h1>\n        <button className='connectwalletbutton' onClick={handleWallet}>Connect Wallet</button>\n      </header>\n\n      <div className='row'>\n        <div className='column'>\n          <div className='div0'>Program ID: {programID}</div>\n          <div className='div0'>Your engaged Solana amount: {solAmount}</div>\n          <div className='div0'>The winner: {winner}</div>\n        </div>\n        <div className='column'>\n          <div className='div0'>Your public key: {publicKey}</div>\n          <div className='div0'>Next move should be executed by {bias}</div>\n          <div className='div0'>Time remaining for the next move: {remainingTime}</div>\n        </div>\n      </div>\n      \n      <hr></hr>\n      <br></br>\n      <div>\n        <button className=\"button2\" onClick={() => setBias(\"X\")}>Pick X</button>\n        <button className=\"button2\" onClick={() => setBias(\"O\")}>Pick O</button>\n      </div>\n\n      <br></br>\n      <div>You have picked {bias}</div>\n      <br></br>\n\n      <table>\n        <tbody>\n          <tr>\n            <td><button className=\"button\" onClick={() => handleCell(cell1, setCell1, 1)}>{cell1}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell2, setCell2, 2)}>{cell2}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell3, setCell3, 3)}>{cell3}</button></td>\n          </tr>\n          \n          <tr>\n            <td><button className=\"button\" onClick={() => handleCell(cell4, setCell4, 4)}>{cell4}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell5, setCell5, 5)}>{cell5}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell6, setCell6, 6)}>{cell6}</button></td>\n          </tr>\n\n          <tr>\n            <td><button className=\"button\" onClick={() => handleCell(cell7, setCell7, 7)}>{cell7}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell8, setCell8, 8)}>{cell8}</button></td>\n            <td><button className=\"button\" onClick={() => handleCell(cell9, setCell9, 9)}>{cell9}</button></td>\n          </tr>\n        </tbody>\n      </table>\n\n      <br></br>\n      \n\n      <div>\n        <h1> X Moves = {X_Moves}</h1>\n        <h1> O Moves = {O_Moves}</h1>\n      </div>\n\n      <hr></hr>\n      <br></br>\n      <button className='claimbutton' onClick={handleClaim}>Click here to recieve your win! Cheers ;)</button>\n      <br></br>\n      <br></br>\n\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"26","severity":1,"message":"27","line":1,"column":8,"nodeType":"28","messageId":"29","endLine":1,"endColumn":12},{"ruleId":"26","severity":1,"message":"30","line":22,"column":21,"nodeType":"28","messageId":"29","endLine":22,"endColumn":33},{"ruleId":"26","severity":1,"message":"31","line":23,"column":21,"nodeType":"28","messageId":"29","endLine":23,"endColumn":33},{"ruleId":"26","severity":1,"message":"32","line":24,"column":18,"nodeType":"28","messageId":"29","endLine":24,"endColumn":27},{"ruleId":"26","severity":1,"message":"33","line":25,"column":25,"nodeType":"28","messageId":"29","endLine":25,"endColumn":41},{"ruleId":"26","severity":1,"message":"34","line":26,"column":21,"nodeType":"28","messageId":"29","endLine":26,"endColumn":34},{"ruleId":"35","severity":1,"message":"36","line":32,"column":14,"nodeType":"37","messageId":"38","endLine":32,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":40,"column":21,"nodeType":"37","messageId":"38","endLine":40,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setProgramID' is assigned a value but never used.","'setSolAmount' is assigned a value but never used.","'setWinner' is assigned a value but never used.","'setRemainingTime' is assigned a value but never used.","'yourPublicKey' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]